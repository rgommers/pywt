# Note that in maintenance branches, all build dependencies should
# have an upper bound equal to the most recent already-released version
# of the dependency. This to prevent that a future backwards-incompatible
# release will break the source build of a PyWavelets release.
# Do accept micro (bug-fix) releases.

[build-system]
build-backend = "mesonpy"
requires = [
    "meson-python>=0.14.0",
    # when updating Cython version, also update check in meson.build
    "Cython>=0.29.35,<3.0; python_version>='3.12' and platform_system=='Windows'",
    "Cython>=0.29.35; python_version<'3.12' or platform_system!='Windows'",

    # When numpy 2.0.0rc1 comes out, we should update this to build against 2.0,
    # and then runtime depend on the range 1.22.X to <2.3. No need to switch to
    # 1.25.2 in the meantime (1.25.x is the first version which exports older C
    # API versions by default).

    # default numpy requirements
    "numpy==1.22.4; python_version<='3.10' and platform_python_implementation != 'PyPy'",
    "numpy==1.23.3; python_version=='3.11' and platform_python_implementation != 'PyPy'",
    # For Python versions which aren't yet officially supported, we specify an
    # unpinned NumPy which allows source distributions to be used and allows
    # wheels to be used as soon as they become available.
    "numpy>=1.26.0b1; python_version>='3.12'",
    "numpy; python_version>='3.9' and platform_python_implementation=='PyPy'",
]

[project]
name = "PyWavelets"
# TODO: add `license-files` once PEP 639 is accepted (see meson-python#88)
#       at that point, no longer include them in `py3.install_sources()`
license = {file = "LICENSE"}
maintainers = [
    {name = "The PyWavelets Developers", email = "pywavelets@googlegroups.com"}
]
description = "PyWavelets, wavelet transform module"
requires-python = ">=3.9"
dependencies = [
    # TODO: update to "pin-compatible" once possible, see
    # https://github.com/FFY00/meson-python/issues/29
    "numpy>=1.22.4",
]
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dynamic = ['version']

[project.urls]
homepage = "https://github.com/PyWavelets/pywt"
source = "https://github.com/PyWavelets/pywt"
documentation = "https://pywavelets.readthedocs.io/"

[tool.spin]
package = "pywt"

[tool.spin.commands]
"Build" = [
  "spin.cmds.meson.build",
  "spin.cmds.meson.test",
  "spin.cmds.build.sdist"
]
Environments = [
    'spin.cmds.meson.run',
    'spin.cmds.meson.ipython',
    'spin.cmds.meson.python',
]
